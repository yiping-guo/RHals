(1.06^25-1)/0.06*1.06^5*1000
(1.07^25-1)/0.07*1000
(1.06^25-1)/0.06*1.06^10*1000
(1.07^30-1)/0.07*1000
install.packages("qlifetable")
library(qlifetable)
set.seed(2311)
data("pop_2006")
pop_2006
?qlifetable
2/25+1/30
install.packages("markovchains")
install.packages("markovchain")
library(markovchain)
markovchain =
function(p){
P = matrix(data = c(p,0.5*(1-p),0.5*(1-p),0.5*(1-p),p,0.5*(1-p),
0.5*(1-p),0.5*(1-p),p),
nrow =3, byrow = TRUE)
mc = new("markovchain", transitionMatrix = P)
mc}
statdist = matrix(data = 0, nrow = 3, ncol = 9)
for(i in 1:9){
p = 0.1*i
mc = markovchain(p)
statdist[,i] = steadyStates(mc)}
statdist
mc = markovchain(1)
mc
steadyStates(mc)
mc = markovchain(0.9)
steadyStates(mc)
install.packages("knitr")
install.packages("knitr")
library(knitr)
library(svd)
A<- matrix(c(3,0,1,3),2,2)
A
svd(A)
1-exp(-(1/20+1/19+2/16+1/13))
-(1/20+1/19+2/16+1/13)
exp(-(1/20+1/19+2/16+1/13))
1-exp(-(1/20+1/19+2/16+1/13))
exp(-(1/20+1/19+2/16+1/13))
10*6*4/12/8/5
1-exp(-(1/12+1/11+2/8+1/5))
exp(-(1/12+1/11+2/8+1/5))
sqrt(0.025*7+1)
sqrt(4-0.025*7)
sqrt(1+0.05*7)
?sqrt
(1+0.025*7)^(1/3)
(4-0.025*7)^(1/3)
(4-0.025*7)
(1+0.025*7)^(1/3)
(8-0.025*7)^(1/3)
(1+0.05*7)^(1/3)
64/65
45/28
4.5^(1/3)
1.78*exp(-2)
1.82*exp(-2)
0.3*75+0.25*30-0.18*90
650/13.8
700/13.8
0.3*75+0.25*30-0.18*105
1000/11.1
0.3*75+0.25*30-0.18*120
1200/8.4
0.3*75+0.25*30-0.20*90
700/13.8
0.3*75+0.25*30-0.20*105
700/12
1000/9
0.3*75+0.25*30-0.20*120
1200/6
0.3+0.25*2+0.25*3+0.2*4
3225/2744
1245/3225
449/3225
0.386*15
2.79/2
exp(0.6429)
?sample
lambda<- 30689
alpha<- 2.3408
(lambda/(lamnda+4000))^alpha
(lambda/(lambda+4000))^alpha
(lambda/(lambda+12000))^alpha
lambda<- 30688.95
alpha<- 2.3408
(lambda/(lambda+4000))^alpha
(lambda/(lambda+12000))^alpha
log(lambda/(lambda+4000))/log(lambda/(lambda+12000))
log(0.75)/log(0.25)
log(lambda/(lambda+4000))/log(lambda/(lambda+12000))
log(0.75)/log(0.25)
library(perm)
library("perm")
install.library("perm")
install.packages("perm")
x<- c(18,20,22,24,26)
y<- c(14,16,19,21,23)
permTS(x,y)
library(perm)
permTS(x,y)
?permTS
permTS(x,y,alternative = "greater")
mean(c(18,20,22,24,26))
mean(c(14,16,19,21,23))
factorial(20)/factorial(10)/factorial(10)
factorial(10)/factorial(5)/factorial(5)
factorial(20)/factorial(10)/factorial(10)
factorial(100)/factorial(50)/factorial(50)
factorial(10)/factorial(5)/factorial(5)
factorial(20)/factorial(10)/factorial(10)
factorial(50)/factorial(25)/factorial(25)
e^25
e^2
4^{25}
factorial(20)/factorial(10)/factorial(10)
333^333
33^33
333^2
2+16+9
10.89^2/27.89+20.61^2/44.39+9.33^2/27.33
10.89^2/27.89+20.61^2/44.39+9.73^2/27.73
1-pchisq(17.24,1)
92*120/200
92*80/200
0
67*120/200
67*80/200
41*120/200
41*80/200
5.2^2/55.2+7.2^2/40.2+1.6^2/24.6+5.2^2/36.8+6.8^2/26.8+2.4^2/16.4
1-pchisq(4.69)
1-pchisq(4.69,2)
2.3+1.5+0.8+6.5+2.2+1.6+0.9+1.7+3.1+2.0+1.2
x<- c(2.3,1.5,0.8,6.5,2.2,1.6,0.9,1.7,3.1,2.0,1.2)
sd(x)
x<- c(2.3,1.5,0.8,6.5,2.2,1.6,0.9,1.7)
mean(x)
sd(x)
?qt
qt(0.025,6)
2.19-2.45*1.82/sqrt(7)
2.19-2.45*1.82/sqrt(7)
2.19+2.45*1.82/sqrt(7)
26/582
46/582
0.079-1.96*sqrt(0.079*0.921/582)
0.079+1.96*sqrt(0.079*0.921/582)
8.6+2.576*2/3
676/180
675/180
sqrt(3.75/180)*1.96+3.75
3.75-sqrt(3.75/180)*1.96
(8*1.96)^2
sqrt(10/6+0.5)
sqrt(10/6+0.5)*1.96
3-sqrt(10/6+0.5)*1.96
3+sqrt(10/6+0.5)*1.96
# Update the rlang package
install.packages("rlang")
690-8000/14
570-6400/14
915-10000/14
118.57/sqrt(112.86*200.71)
source("~/.active-rstudio-document", echo=TRUE)
log(1.788/0.212)/2+1.96/sqrt(11)
log(1.788/0.212)/2-1.96/sqrt(11)
?tanh
tanh(-1)
tanh(0)
tanh(infty)
tanh(inf)
tanh(Inf)
tanh(-Inf)
tanh(0.475)
tanh(1.657)
choose(10,5)*0.5^10
choose(10,5)*0.9^5*0.1^5
pnorm(-6,0,1)
pnorm(-4,0,1)
pnorm(-2,0,1)
pnorm(-1,0,1)
pnorm(-3,0,1)
install.packages("devtools")
devtools::install_github("amvillegas/StMoMo", ref = "GroupLasso")
install.packages("devtools")
devtools::install_github("amvillegas/StMoMo", ref = "GroupLasso")
devtools::install_github("amvillegas/StMoMo", ref = "GroupLasso",force = TRUE)
LCfit <- fit(lc(), data = EWMaleData, ages.fit = 55:89)
install.packages("curl")
install.packages("devtools")
install.packages(c("cpp11", "data.table", "digest", "ecp", "fastICA", "fBasics", "geometry", "gert", "httr2", "kernlab", "mvtnorm", "openssl", "pcaPP", "RcppEigen", "Rdpack", "rmarkdown", "stabledist", "strucchange", "svd", "waldo", "xfun"))
devtools::install_github("amvillegas/StMoMo", ref = "GroupLasso",force = TRUE)
LCfit <- fit(lc(), data = EWMaleData, ages.fit = 55:89)
library(StMoMo)
LCfit <- fit(lc(), data = EWMaleData, ages.fit = 55:89)
wxt <- genWeightMat(55:89, EWMaleData$years, clip = 3)
RHfit <- fit(rh(), data = EWMaleData, ages.fit = 55:89, wxt = wxt,
start.ax = LCfit$ax, start.bx = LCfit$bx, start.kt = LCfit$kt)
?fit.StMoMo
?rh
RHfitLogGaussian <- fit(rh(link = "log-Gaussian"),
data = EWMaleData, ages.fit = 55:89, wxt = wxt,
start.ax = LCfit$ax, start.bx = LCfit$bx, start.kt = LCfit$kt)
?AIC
?bootstrap
install.packages(c("fs", "Hmisc", "ps"))
8/11
8/11*0.1+3/11*0.05
8/11*0.2^2+3/11*0.1^2-0.3*0.2*0.1*24/121
sqrt(0.0306281)
(8/11)^2*0.2^2+(3/11)^2*0.1^2-0.3*0.2*0.1*24/121
sqrt(0.02071074)
3/11*0.01/0.0207
(3/11*0.01+8/11*(-0.15)*0.2*0.1)/0.02073
install.packages("installr")
installr::updateR()
diag(1:1)
# Load devtools
library(devtools)
# Navigate to the directory containing your package
setwd("C:/Disk D/Study/Research/8 -- R Package for Generalized Renshaw-Haberman Model Fitting/Codes/RHals")
devtools::document()
# Install the package
devtools::install()
# Load your package
library(RHals)
Data1 <- load_EWData(ages = 60:89, years = 1960:2009, series = "Male")
Data2 <- load_EWData(ages = 60:89, years = 1960:2009, series = "Female")
MData <- list(Data1, Data2)
multifit_RH <- RHMultifit(MData, ages = 60:89, years = 1960:2009)
multifit_GCAE1 <- RHMultifit(MData, ages = 60:89, years = 1960:2009,
common.bx = TRUE)
multifit_GCAE2 <- RHMultifit(MData, ages = 60:89, years = 1960:2009,
common.b0x = TRUE)
multifit_GCAE3 <- RHMultifit(MData, ages = 60:89, years = 1960:2009,
common.bx = TRUE, common.b0x = TRUE)
multifit_LC <- RHMultifit(MData, ages = 60:89, years = 1960:2009, lc = TRUE)
multifit_CAE <- RHMultifit(MData, ages = 60:89, years = 1960:2009, lc = TRUE, common.bx = TRUE)
multifit_GCAE3$fits[[2]]
multifit_LC$AIC
multifit_CAE$AIC
multifit_RH$AIC
multifit_LC$AIC
multifit_CAE$AIC
multifit_RH$AIC
multifit_GCAE1$AIC
multifit_GCAE2$AIC
multifit_GCAE3$AIC
multifit_LC$BIC
multifit_CAE$BIC
multifit_RH$BIC
multifit_GCAE1$BIC
multifit_GCAE2$BIC
multifit_GCAE3$BIC
multifit_GCAE3$AIC
multifit_GCAE3$BIC
multifit_LC$loglik
multifit_CAE$loglik
multifit_RH$loglik
multifit_GCAE1$loglik
multifit_GCAE2$loglik
multifit_GCAE3$loglik
multifit_LC$npar
multifit_CAE$npar
multifit_RH$npar
multifit_GCAE1$npar
multifit_GCAE2$npar
multifit_GCAE3$npar
